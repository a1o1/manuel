AWSTemplateFormatVersion: "2010-09-09"
Description: "Manuel Backend - CI/CD Pipeline Infrastructure"

Parameters:
  GitHubOwner:
    Type: String
    Default: a1o1
    Description: GitHub repository owner

  GitHubRepo:
    Type: String
    Default: manuel
    Description: GitHub repository name

  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch to track

  ArtifactsBucketName:
    Type: String
    Default: manuel-pipeline-artifacts
    Description: S3 bucket for build artifacts

  NotificationEmail:
    Type: String
    Default: admin@yourdomain.com
    Description: Email for pipeline notifications

Resources:
  # S3 Bucket for Pipeline Artifacts
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ArtifactsBucketName}-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldArtifacts
            Status: Enabled
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 7
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # CodeCommit Repository (Mirror from GitHub)
  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: manuel-backend
      RepositoryDescription: Mirror of GitHub repository for AWS CodePipeline

  # SNS Topic for Notifications
  PipelineNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: manuel-pipeline-notifications
      DisplayName: Manuel Pipeline Notifications
      Subscription:
        - Protocol: email
          Endpoint: !Ref NotificationEmail

  # CodeBuild Service Role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: manuel-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CodeBuildServicePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "${ArtifactsBucket}/*"
                  - !GetAtt ArtifactsBucket.Arn
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/manuel/*"

  # Main Build Project
  ManuelBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: manuel-build
      Description: Main build project for Manuel backend
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-build.yml
      TimeoutInMinutes: 20

  # Integration Test Project
  ManuelIntegrationTestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: manuel-integration-test
      Description: Integration test project for Manuel backend
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Value: dev
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-integration-test.yml
      TimeoutInMinutes: 15

  # Chaos Testing Project
  ManuelChaosTestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: manuel-chaos-test
      Description: Chaos engineering test project for Manuel backend
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-chaos-testing.yml
      TimeoutInMinutes: 25

  # CodePipeline Service Role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: manuel-codepipeline-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineServicePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "${ArtifactsBucket}/*"
                  - !GetAtt ArtifactsBucket.Arn
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt ManuelBuildProject.Arn
                  - !GetAtt ManuelIntegrationTestProject.Arn
                  - !GetAtt ManuelChaosTestProject.Arn
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:ListBranches
                  - codecommit:ListRepositories
                Resource: !GetAtt CodeCommitRepo.Arn
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResources
                  - cloudformation:GetTemplate
                  - cloudformation:ValidateTemplate
                Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/manuel-*/*"
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref PipelineNotificationTopic

  # CodeDeploy Application
  ManuelCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: manuel-serverless-app
      ComputePlatform: Lambda

  # Basic CodePipeline
  ManuelPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: manuel-backend-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName: !GetAtt CodeCommitRepo.Name
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceOutput

        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ManuelBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput

        - Name: DeployDev
          Actions:
            - Name: DeployDevAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: manuel-dev
                TemplatePath: BuildOutput::packaged-template.yaml
                ParameterOverrides: file://parameters-dev.json
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        - Name: TestDev
          Actions:
            - Name: IntegrationTestDevAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ManuelIntegrationTestProject
                EnvironmentVariables: |
                  [{"name":"ENVIRONMENT","value":"dev"}]
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

  # CloudFormation Service Role for Deployments
  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: manuel-cloudformation-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess

Outputs:
  PipelineName:
    Description: Name of the created CodePipeline
    Value: !Ref ManuelPipeline
    Export:
      Name: !Sub "${AWS::StackName}-PipelineName"

  ArtifactsBucketName:
    Description: Name of the S3 bucket for pipeline artifacts
    Value: !Ref ArtifactsBucket
    Export:
      Name: !Sub "${AWS::StackName}-ArtifactsBucket"

  NotificationTopicArn:
    Description: ARN of the SNS topic for pipeline notifications
    Value: !Ref PipelineNotificationTopic
    Export:
      Name: !Sub "${AWS::StackName}-NotificationTopic"

  CodeCommitRepoCloneUrl:
    Description: Clone URL for the CodeCommit repository
    Value: !GetAtt CodeCommitRepo.CloneUrlHttp
    Export:
      Name: !Sub "${AWS::StackName}-CodeCommitCloneUrl"
