# Manuel Backend - Pylint Configuration
# Advanced static analysis configuration

[MASTER]
# Use multiple processes to speed up Pylint
jobs = 0

# Pickle collected data for later comparisons
persistent = yes

# Paths to ignore
ignore-paths = 
    ^tests/.*$,
    ^\.venv/.*$,
    ^venv/.*$,
    ^build/.*$,
    ^dist/.*$,
    ^\.aws-sam/.*$,
    ^node_modules/.*$

# Extensions to load
load-plugins = 
    pylint.extensions.check_elif,
    pylint.extensions.bad_builtin,
    pylint.extensions.docparams,
    pylint.extensions.docstyle,
    pylint.extensions.overlapping_exceptions,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.no_self_use,
    pylint.extensions.set_membership,
    pylint.extensions.typing

[MESSAGES CONTROL]
# Disable specific messages
disable = 
    # Design issues (too subjective)
    too-few-public-methods,
    too-many-arguments,
    too-many-locals,
    too-many-branches,
    too-many-statements,
    too-many-instance-attributes,
    too-many-public-methods,
    
    # Import issues (handled by isort)
    wrong-import-order,
    wrong-import-position,
    
    # Docstring issues (handled by pydocstyle)
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    
    # Naming conventions (AWS Lambda patterns)
    invalid-name,
    
    # Exception handling (AWS patterns)
    broad-except,
    bare-except,
    
    # Logging (structured logging patterns)
    logging-format-interpolation,
    logging-fstring-interpolation,
    
    # AWS specific patterns
    unused-argument,  # Lambda context often unused
    
    # Type checking (handled by mypy)
    unsubscriptable-object,
    unsupported-assignment-operation

# Enable specific messages
enable = 
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead

[REPORTS]
# Output format
output-format = colorized

# Include message ids in output
include-ids = yes

# Reports to generate
reports = no

# Evaluation expression
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

[REFACTORING]
# Maximum number of nested blocks
max-nested-blocks = 5

# Maximum number of arguments for function / method
max-args = 8

# Maximum number of locals for function / method body
max-locals = 20

# Maximum number of return / yield for function / method body
max-returns = 8

# Maximum number of branch for function / method body
max-branches = 15

# Maximum number of statements in function / method body
max-statements = 60

# Maximum number of parents for a class
max-parents = 7

# Maximum number of attributes for a class
max-attributes = 10

# Minimum number of public methods for a class
min-public-methods = 1

# Maximum number of public methods for a class
max-public-methods = 25

# Maximum number of boolean expressions in an if statement
max-bool-expr = 5

[BASIC]
# Good variable names
good-names = 
    i,j,k,ex,Run,_,
    id,
    aws,
    s3,
    db,
    api,
    url,
    uri,
    ttl,
    arn,
    jwt,
    sns,
    sqs,
    iam,
    vpc,
    ip,
    os,
    io

# Bad variable names
bad-names = 
    foo,bar,baz,toto,tutu,tata

# Regular expression matching correct function names
function-rgx = [a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx = [a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
const-rgx = (([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx = [a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx = [a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx = ([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Regular expression matching correct method names
method-rgx = [a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names
module-rgx = (([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct class names
class-rgx = [A-Z_][a-zA-Z0-9]+$

[FORMAT]
# Maximum number of characters on a single line
max-line-length = 88

# Maximum number of lines in a module
max-module-lines = 1000

# String used as indentation unit
indent-string = '    '

# Number of spaces of indent required inside a hanging or continued line
indent-after-paren = 4

[LOGGING]
# Format style used to check logging format string
logging-format-style = new

[MISCELLANEOUS]
# List of note tags to take in consideration
notes = FIXME,XXX,TODO,BUG,HACK

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines = 4

# Ignore comments when computing similarities
ignore-comments = yes

# Ignore docstrings when computing similarities
ignore-docstrings = yes

# Ignore imports when computing similarities
ignore-imports = no

[SPELLING]
# Spelling dictionary name
spelling-dict = 

# List of comma separated words that should not be checked
spelling-ignore-words = 

# List of comma separated words that should be considered directives if they appear and the beginning of a comment
spelling-ignore-comment-directives = fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:

[STRING]
# This flag controls whether inconsistent-quotes generates a warning when the character used as a quote delimiter is used inconsistently within a module
check-quote-consistency = no

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators = contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference system
generated-members = 

# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members = yes

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None
ignore-none = yes

# This flag controls whether pylint should warn about no-member and similar checks whenever an opaque object is returned when inferring
ignore-on-opaque-inference = yes

# List of class names for which member attributes should not be checked
ignored-classes = optparse.Values,thread._local,_thread._local

# List of module names for which member attributes should not be checked
ignored-modules = 

# Show a hint with the correct naming format instead of only the name of the wrong naming style
include-naming-hint = yes

# List of decorators that change the signature of a decorated function
signature-mutators = 

[VARIABLES]
# List of additional names supposed to be defined in builtins
additional-builtins = 

# Tells whether unused global variables should be treated as a violation
allow-global-unused-variables = yes

# List of strings which can identify a callback function by name
callbacks = cb_,_cb

# A regular expression matching the name of dummy variables
dummy-variables-rgx = _+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored
ignored-argument-names = _.*|^ignored_|^unused_

# Tells whether we should check for unused import in __init__ files
init-import = no

# List of qualified module names which can have objects that can redefine builtins
redefining-builtins-modules = six.moves,past.builtins,future.builtins,builtins,io

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods = __init__,__new__,setUp,__post_init__

# List of member names, which should be excluded from the protected access warning
exclude-protected = _asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method
valid-classmethod-first-arg = cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg = cls

[DESIGN]
# Maximum number of arguments for function / method
max-args = 8

# Maximum number of attributes for a class
max-attributes = 10

# Maximum number of boolean expressions in an if statement
max-bool-expr = 5

# Maximum number of branch for function / method body
max-branches = 15

# Maximum number of locals for function / method body
max-locals = 20

# Maximum number of parents for a class
max-parents = 7

# Maximum number of public methods for a class
max-public-methods = 25

# Maximum number of return / yield for function / method body
max-returns = 8

# Maximum number of statements in function / method body
max-statements = 60

# Minimum number of public methods for a class
min-public-methods = 1

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions = Exception